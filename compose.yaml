services:
  postgres:
    image: postgres:15
    restart: unless-stopped
    environment:
      POSTGRES_DB: haven
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "127.0.0.1:5432:5432"
    volumes:
      - pg_data:/var/lib/postgresql/data
      - ./schema/catalog_mvp.sql:/docker-entrypoint-initdb.d/catalog_mvp.sql:ro

  qdrant:
    image: qdrant/qdrant:latest
    restart: unless-stopped
    ports:
      - "127.0.0.1:6333:6333"
    volumes:
      - qdrant_data:/qdrant/storage

  search:
    build:
      context: .
      args:
        SERVICE: "search"
    environment:
      - VECTOR_BACKEND=qdrant
      - QDRANT_URL=http://qdrant:6333
      - QDRANT_COLLECTION=haven_chunks
      - DB_DSN=postgresql://postgres:postgres@postgres:5432/haven
    ports:
      - "127.0.0.1:8081:8080"
    depends_on:
      - postgres
      - qdrant

  gateway:
    build:
      context: .
      args:
        SERVICE: "gateway"
    environment:
      - SEARCH_URL=http://search:8080
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/haven
      - AUTH_TOKEN=${AUTH_TOKEN:-changeme}
      - CATALOG_BASE_URL=http://catalog:8081
      - CATALOG_TOKEN=${CATALOG_TOKEN:-}
      - QDRANT_URL=http://qdrant:6333
      - QDRANT_COLLECTION=haven_chunks
      - EMBEDDING_MODEL=BAAI/bge-m3
    depends_on:
      - search
    ports:
      - "127.0.0.1:8085:8080"

  catalog:
    build:
      context: .
      args:
        SERVICE: "catalog"
    environment:
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/haven
      CATALOG_TOKEN: ${CATALOG_TOKEN:-}
    depends_on:
      - postgres
    ports:
      - "127.0.0.1:8082:8081"

  collector_web:
    build:
      context: .
      args:
        SERVICE: "collector"
    environment:
      - INGEST_URL=http://search:8080/v1/ingest/documents:batchUpsert
      - AUTH_TOKEN=${AUTH_TOKEN:-changeme}
    depends_on:
      - search

volumes:
  pg_data:
  qdrant_data:
