openapi: 3.0.3
info:
  title: Haven Gateway API
  version: 0.1.0
servers:
  - url: http://localhost:8080
paths:
  /v1/healthz:
    get:
      tags:
        - system
      summary: Health check
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: ok
  /v1/search:
    get:
      tags:
        - search
      summary: Hybrid message search
      security:
        - bearerAuth: []
      parameters:
        - name: q
          in: query
          required: true
          schema:
            type: string
        - name: k
          in: query
          required: false
          schema:
            type: integer
            default: 20
      responses:
        '200':
          description: Search results
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchResponse'
  /v1/ask:
    post:
      tags:
        - ask
      summary: Ask for a summary of relevant messages
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AskRequest'
      responses:
        '200':
          description: Ask response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AskResponse'
  /v1/doc/{doc_id}:
    get:
      tags:
        - documents
      summary: Retrieve canonical message document
      security:
        - bearerAuth: []
      parameters:
        - name: doc_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Document details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
  /v1/context/general:
    get:
      tags:
        - context
      summary: Retrieve collection overview statistics
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Context overview
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContextGeneral'
  /v1/catalog/events:
    post:
      tags:
        - catalog
      summary: Enqueue catalog ingestion events
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CatalogEventsRequest'
      responses:
        '202':
          description: Ingestion accepted
          content:
            application/json:
              schema:
                type: object
                properties:
                  ingested:
                    type: integer
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    SearchHit:
      type: object
      properties:
        doc_id:
          type: string
        thread_id:
          type: string
        ts:
          type: string
          format: date-time
        sender:
          type: string
        text:
          type: string
        score:
          type: number
        sources:
          type: array
          items:
            type: string
    SearchResponse:
      type: object
      properties:
        query:
          type: string
        results:
          type: array
          items:
            $ref: '#/components/schemas/SearchHit'
    AskRequest:
      type: object
      properties:
        query:
          type: string
        k:
          type: integer
          default: 5
      required:
        - query
    AskResponse:
      type: object
      properties:
        query:
          type: string
        answer:
          type: string
        citations:
          type: array
          items:
            type: object
            properties:
              doc_id:
                type: string
              ts:
                type: string
                format: date-time
    Document:
      type: object
      properties:
        doc_id:
          type: string
        thread_id:
          type: string
        ts:
          type: string
          format: date-time
        sender:
          type: string
        text:
          type: string
    ContextThread:
      type: object
      properties:
        thread_id:
          type: string
        title:
          type: string
          nullable: true
        message_count:
          type: integer
    ContextHighlight:
      type: object
      properties:
        doc_id:
          type: string
        thread_id:
          type: string
        ts:
          type: string
          format: date-time
        sender:
          type: string
        text:
          type: string
    ContextGeneral:
      type: object
      properties:
        total_threads:
          type: integer
        total_messages:
          type: integer
        last_message_ts:
          type: string
          format: date-time
          nullable: true
        top_threads:
          type: array
          items:
            $ref: '#/components/schemas/ContextThread'
        recent_highlights:
          type: array
          items:
            $ref: '#/components/schemas/ContextHighlight'
    CatalogEventsRequest:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/CatalogEventItem'
      required:
        - items
    CatalogEventItem:
      type: object
      properties:
        source:
          type: string
        doc_id:
          type: string
        thread:
          $ref: '#/components/schemas/CatalogThread'
        message:
          $ref: '#/components/schemas/CatalogMessage'
        chunks:
          type: array
          items:
            $ref: '#/components/schemas/CatalogChunk'
      required:
        - source
        - doc_id
        - thread
        - message
        - chunks
    CatalogThread:
      type: object
      properties:
        id:
          type: string
        kind:
          type: string
        participants:
          type: array
          items:
            type: string
        title:
          type: string
          nullable: true
      required:
        - id
        - kind
        - participants
    CatalogMessage:
      type: object
      properties:
        row_id:
          type: integer
          nullable: true
        guid:
          type: string
        thread_id:
          type: string
        ts:
          type: string
          format: date-time
          nullable: true
        sender:
          type: string
        sender_service:
          type: string
          nullable: true
        is_from_me:
          type: boolean
        text:
          type: string
        attrs:
          type: object
      required:
        - guid
        - thread_id
        - sender
        - is_from_me
        - text
        - attrs
    CatalogChunk:
      type: object
      properties:
        id:
          type: string
        chunk_index:
          type: integer
        text:
          type: string
        meta:
          type: object
      required:
        - id
        - chunk_index
        - text
